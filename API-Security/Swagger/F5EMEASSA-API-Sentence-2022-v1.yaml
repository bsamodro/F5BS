openapi: 3.0.1
info:
  title: API Sentence Generator
  description: list of attributes
  version: v1-auth
paths:
  /api/adjectives:
    get:
      description: List all adjectives
      tags:
        - adjectives
      responses:
        '200':
          description: a list of adjectives with their index
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adjectives"
    post:
      description: create an adjective
      tags:
        - adjectives
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: worried
      responses:
        '201':
          description: adjective created
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                  name:
                    type: string
              example:
                id: 4
                name: worried
  /api/adjectives/{id}:
    get:
      description: get a specific adjective
      tags:
        - adjectives
      parameters:
        - name: id
          in: path
          required: true
          description: id of the adjective to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                  name:
                    type: string
              example:
                id: 4
                name: worried
    delete:
      description: delete an adjective
      tags:
        - adjectives
      parameters:
        - name: id
          in: path
          required: true
          description: id of the adjective to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Delete an Adjective
          content:
            application/json:
              schema:
                type: object
              example: {}
  /api/animals:
    get:
      description: List all animals
      tags:
        - animals
      responses:
        '200':
          description: a list of animals with their index
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Animals"
    post:
      description: create an animal
      tags:
        - animals
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: cat
      responses:
        '201':
          description: animal created
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                  name:
                    type: string
              example:
                id: 4
                name: cat
  /api/animals/{id}:
    get:
      description: get a specific adjective
      tags:
        - animals
      parameters:
        - name: id
          in: path
          required: true
          description: id of the animal to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                  name:
                    type: string
              example:
                id: 4
                name: cat
    delete:
      description: delete an adjective
      tags:
        - animals
      parameters:
        - name: id
          in: path
          required: true
          description: id of the animal to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Delete an Adjective
          content:
            application/json:
              schema:
                type: object
              example: {}
  /api/locations:
    get:
      description: List all locations
      tags:
        - locations
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: a list of locations with their index
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Locations"
        '401':
          description: Authentication failed
    post:
      description: create a location
      tags:
        - locations
      security: 
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: lake
      responses:
        '201':
          description: location created
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                  name:
                    type: string
              example:
                id: 4
                name: lake
        '401':
          description: authentication failed
  /api/locations/{id}:
    get:
      description: get a specific location
      tags:
        - locations
      parameters:
        - name: id
          in: path
          required: true
          description: id of the location to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                  name:
                    type: string
              example:
                id: 4
                name: lake
    delete:
      description: delete a location
      tags:
        - locations
      parameters:
        - name: id
          in: path
          required: true
          description: id of the location to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Delete a Location
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              example: {}

components:
  schemas:
    Adjectives:
      type: array
      items:
        required:
          - name
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: worried
    Animals:
      type: array
      items:
        required:
          - name
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: cat
    Locations:
      type: array
      items:
        required:
          - name
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: lake
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT